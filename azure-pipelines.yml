trigger:
  batch: true
  branches:
    include:
    - dev
  paths:
    include:
      - force-app/*
      - manifest/*
stages:        
  - stage: TESTE
    jobs:
    - deployment: 'deployToProduction'
      displayName: 'teste Alexandre'
      # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      pool:
        vmImage: 'ubuntu-latest'

      container:
        image: salesforce/salesforcedx:latest-full
      
      environment: 'dev'
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self
                displayName: 'Checkout files at $(Build.SourceBranch)'
              - script: |
                  destdir=./auth.txt
                  cat <<< "$(sfdxUrlProd)" > "$destdir"

                  echo "sfdx auth:sfdxurl:store --sfdxurlfile $destdir --setalias $(Build.SourceBranch) --json"
                  cmd=$(sfdx auth:sfdxurl:store --sfdxurlfile $destdir --setalias $(Build.SourceBranch) --json)

                  exit_code=$(jq -r '.status' <<< "$cmd")

                  if [[ $exit_code -gt 0 ]]; then
                    echo "Falha na autenticação com ambiente."
                    exit 1
                  else
                    echo "Autenticação realizada com sucesso."

                    echo "force:config:set defaultusername=$(Build.SourceBranch)"
                    sfdx force:config:set defaultusername=$(Build.SourceBranch)
                    exit 0
                  fi
                displayName: 'Autorizando ambiente Salesforce'
              - script: |
                  echo "sfdx force:source:convert --manifest './manifest/package.xml' --outputdir ./src --json"

                  # Convert source code to metadata format
                  cmd=$(sfdx force:source:convert --manifest './manifest/package.xml' --outputdir ./src --json)

                  exit_code=$(jq -r '.status' <<< "$cmd")

                  if [[ $exit_code -gt 0 ]]; then
                    echo "Falha ao converter os metadados."
                    
                    message=$(jq -r '.message' <<< "$cmd")
                    echo $message
                    exit 1
                  else
                    echo "Metadados convertidos com sucesso."
                    exit 0
                  fi
                displayName: 'Convertendo metadados para deploy'
              - script: |
                  cmd=$(sfdx force:mdapi:deploy --testlevel NoTestRun --deploydir ./src -c --targetusername $(Build.SourceBranch) --wait 60 --json) 

                  exit_code=$(jq -r '.status' <<< "$cmd")

                  if [[ $exit_code -gt 0 ]]; then
                    echo "FALHA na execução dos testes."

                    message=$(jq -r '.message' <<< "$cmd")
                    echo $message
                    exit 1
                  else
                    echo "Testes executados com sucesso."

                    jobid=$(jq -r '.result.id' <<< "$cmd")
                    echo "##vso[task.setvariable variable=JobId]${jobid}"

                    exit 0
                  fi
                displayName: 'Validando metadados (Testes unitários)'